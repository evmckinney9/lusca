# replot_fit_demo.py — auto-generated by %%mplfreeze
import os
from pathlib import Path
import numpy as np, matplotlib.pyplot as plt
import lusca

HERE = Path(__file__).parent
NPZ  = HERE / "fit_demo.npz"

def main():
    os.chdir(HERE)
    data = np.load(NPZ)
    x_d = data['x_d']
    y_obs = data['y_obs']
    sigma = data['sigma']
    y_fit = data['y_fit']
    resid = data['resid']
    coeffs = data['coeffs']

    # ---- begin captured plotting cell ----
    with plt.style.context("lusca"):
        fig = plt.figure(figsize=(6.8, 4.6), constrained_layout=True)
        gs = fig.add_gridspec(nrows=2, ncols=1, height_ratios=[2.0, 1.2])

        ax = fig.add_subplot(gs[0, 0])
        axr = fig.add_subplot(gs[1, 0], sharex=ax)

        # data colored by per-point σ + fit
        sc = ax.scatter(x_d, y_obs, c=sigma, s=16, cmap="viridis", label="data")
        (l_fit,) = ax.plot(x_d, y_fit, lw=2.0, label="weighted cubic fit")

        # thin colorbar tucked to the right
        cb = fig.colorbar(sc, ax=ax, pad=0.01, fraction=0.04)
        cb.set_label(r"$\sigma$")

        ax.set_ylabel("y")
        ax.legend(loc="upper left", frameon=False)

        # residuals panel (no extra legend)
        axr.axhline(0, color="k", ls=":", lw=1)
        axr.plot(x_d, resid, ".", ms=4)
        axr.set_xlabel("x")
        axr.set_ylabel("resid")

        plt.show()
    # ---- end captured plotting cell ----

if __name__ == "__main__":
    main()
