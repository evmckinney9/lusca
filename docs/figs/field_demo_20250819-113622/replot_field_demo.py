# replot_field_demo.py â€” auto-generated by %%mplfreeze
import os
from pathlib import Path
import numpy as np, matplotlib.pyplot as plt
import lusca

HERE = Path(__file__).parent
NPZ  = HERE / "field_demo.npz"

def main():
    os.chdir(HERE)
    data = np.load(NPZ)
    X = data['X']
    Y = data['Y']
    Z = data['Z']
    levels = data['levels']

    # ---- begin captured plotting cell ----
    with plt.style.context("lusca"):
        fig, ax = plt.subplots(figsize=(6.2, 3.8), constrained_layout=True)

        # diverging around 0 with one colorbar
        from matplotlib.colors import TwoSlopeNorm

        im = ax.imshow(
            Z,
            extent=[X.min(), X.max(), Y.min(), Y.max()],
            origin="lower",
            aspect="equal",
            cmap="coolwarm",
            norm=TwoSlopeNorm(vmin=Z.min(), vcenter=0.0, vmax=Z.max()),
        )
        cs = ax.contour(X, Y, Z, levels=levels[::2], colors="k", linewidths=0.7)
        ax.clabel(cs, fmt="%.2f", fontsize=7)

        cbar = fig.colorbar(im, ax=ax, pad=0.02)
        cbar.set_label("Z(x, y)")

        ax.set_xlabel("x")
        ax.set_ylabel("y")
        ax.set_title("Scalar field with contours")

        # minimal inset zoom (tests insets without clutter)
        from mpl_toolkits.axes_grid1.inset_locator import inset_axes, mark_inset

        iax = inset_axes(ax, width="35%", height="35%", loc="upper left", borderpad=1.0)
        x0, x1, y0, y1 = -2.0, 0.0, -1.5, 1.5
        iax.imshow(
            Z,
            extent=[X.min(), X.max(), Y.min(), Y.max()],
            origin="lower",
            aspect="auto",
            cmap="coolwarm",
            norm=im.norm,
        )
        iax.set_xlim(x0, x1)
        iax.set_ylim(y0, y1)
        iax.set_xticks([])
        iax.set_yticks([])
        mark_inset(ax, iax, loc1=2, loc2=4, fc="none", ec="0.3", lw=0.8)

        plt.show()
    # ---- end captured plotting cell ----

if __name__ == "__main__":
    main()
